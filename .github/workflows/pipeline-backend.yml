name: Backend API Pipeline

on:
  push:
    branches:
      - master
    paths:
      - api/**
      - .github/workflows/pipeline-backend.yml

jobs:
  compile:
    runs-on: ubuntu-latest
    name: Compile Project
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'
      - name: Grant execute permission for gradlew
        run: chmod +x api/mvnw
      - name: Running Unit Tests
        run: |
          cd api
          ./mvnw clean compile

  unite-tests:
    runs-on: ubuntu-latest
    name: Unite Tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'
      - name: Grant execute permission for gradlew
        run: chmod +x api/mvnw
      - name: Running Unit Tests
        run: |
          cd api
          ./mvnw clean test

  build:
    runs-on: ubuntu-latest
    name: Build backend
    needs: [compile, unite-tests]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'
      - name: Grant execute permission for gradlew
        run: chmod +x api/mvnw
      - name: Compile Project
        run: |
          cd api
          ./mvnw clean compile

  build-image:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Verify mvnw exists
        run: ls -ls api/
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'
      - name: Grant execute permission for gradlew
        run: chmod +x api/mvnw
      - name: Extract Project Version
        id: extract_version
        run: |
          cd api
          VERSION=$(./mvnw -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: api
          file: api/Dockerfile
          push: true
          tags: ${{secrets.DOCKER_USERNAME}}/api:${{ steps.extract_version.outputs.VERSION }}
          build-args: |
            APP_VERSION=${{ steps.extract_version.outputs.VERSION }}

  deploy:
    name: Deploy to Google Cloud
    runs-on: ubuntu-latest
    needs: [build-image]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Auth with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Set GCP Project
        run: gcloud config set project ${{ secrets.GCP_PROJECT }}

      - name: Deploy to Google Cloud Run
        run: |
          gcloud run deploy my-spring-boot-app \
          --image=${{ secrets.DOCKER_USERNAME }}/api:${{ needs.build-image.outputs.IMAGE_TAG }} \
          --platform managed \
          --region europe-west3 \
          --allow-unauthenticated