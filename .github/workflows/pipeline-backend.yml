name: Backend API Pipeline

on:
  push:
    branches:
      - master
    paths:
      - api/**
      - .github/workflows/pipeline-backend.yml

jobs:
  compile:
    runs-on: ubuntu-latest
    name: Compile Project
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'
      - name: Grant execute permission for gradlew
        run: chmod +x api/gradlew
      - name: Running Unit Tests
        run: |
          cd api
          ./mvnw clean compile

  unite-tests:
    runs-on: ubuntu-latest
    name: Unite Tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'
      - name: Grant execute permission for gradlew
        run: chmod +x api/gradlew
      - name: Running Unit Tests
        run: |
          cd api
          ./mvnw clean test

  build:
    runs-on: ubuntu-latest
    name: Build backend
    needs: [compile, unite-tests]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'
      - name: Grant execute permission for gradlew
        run: chmod +x api/gradlew
      - name: Compile Project
        run: |
          cd api
          ./mvnw clean compile

  build-image:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'
      - name: Grant execute permission for gradlew
        run: chmod +x api/gradlew
      - name: Extract Project Version
        id: extract_version
        run: |
          cd api
          echo "VERSION=$(./mvnw -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: api
          file: api/Dockerfile
          push: true
          tags: ${{secrets.DOCKER_USERNAME}}/api:${{ steps.extract_version.outputs.VERSION }}
          build-args: |
            APP_VERSION=${{ steps.extract_version.outputs.VERSION }}