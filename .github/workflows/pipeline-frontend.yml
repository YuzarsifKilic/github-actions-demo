name: Angular Application CI/CD Pipeline

on:
  push:
    branches:
      - master
    paths:
      - frontend/**
      - .github/workflows/pipeline-frontend.yml

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build Angular Application
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Dependencies
        run: |
          cd frontend 
          npm install

      - name: Build Angular Application
        run: |
          cd frontend
          npm run build --prod

      - name: Verify Build Output
        run: |
          ls -la frontend/dist

  build-image:
    runs-on: ubuntu-latest
    name: Build Docker Image
    needs: [build]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract Project Version
        id: extract_version
        run: |
          VERSION=$(jq -r '.version' frontend/package.json)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "::set-output name=VERSION::$VERSION"

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:${{ steps.extract_version.outputs.VERSION }} \
                        --build-arg API_URL=${{ secrets.API_URL }} \
                        frontend
          docker tag ${{ secrets.DOCKER_USERNAME }}/frontend:${{ steps.extract_version.outputs.VERSION }} ${{ secrets.DOCKER_USERNAME }}/frontend:latest

      - name: Push to DockerHub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:${{ steps.extract_version.outputs.VERSION }}
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest

      - name: Verify Docker Image
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/frontend:latest
          docker run --rm ${{ secrets.DOCKER_USERNAME }}/frontend:latest ls /usr/share/nginx/html

  deploy:
    name: Deploy to Google Cloud
    runs-on: ubuntu-latest
    needs: [ build-image ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Auth with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT }}

      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Deploy to Google Cloud Run
        run: |
          gcloud run deploy my-angular-app \
          --image=${{ secrets.DOCKER_USERNAME }}/frontend:latest \
          --platform=managed \
          --region=europe-west3 \
          --allow-unauthenticated \
          --revision-suffix=$(date +%s) \
          --port=80